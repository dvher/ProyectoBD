{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/diego/Escritorio/ProyectoBD/front/src/componentes/consultas/ConsultaUno.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { consultaUno } from \"../../api/empresa\";\nimport { toast } from \"react-toastify\";\nexport default function ConsultaUno() {\n  _s();\n\n  //variable  de estado para el manejo de error de servidor\n  const [error, setError] = useState(\"\");\n  const formik = useFormik({\n    initialValues: initialValues(),\n    validationSchema: Yup.object({\n      id: Yup.string().required(\"El ID es obligatorio\")\n    }),\n    onSubmit: async id => {\n      console.log(\"id:\", id);\n      setError(\"\");\n      const result = await consultaUno(empresaData);\n\n      if (result.message) {\n        toast.success(\"aaaaa\");\n        console.log(result);\n      } else {\n        setError(error.message);\n        toast.error(error.message);\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"login-form\",\n    onSubmit: formik.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Ingresa una nueva empresa.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n      type: \"number\",\n      placeholder: \"Id de la empresa\",\n      name: \"id_empresa\",\n      value: formik.values.id_empresa,\n      onChange: formik.handleChange,\n      error: formik.errors.id_empresa && true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n      type: \"text\",\n      placeholder: \"Nombre de la empresa\",\n      name: \"nombre_empresa\",\n      value: formik.values.nombre_empresa,\n      onChange: formik.handleChange,\n      error: formik.errors.nombre_empresa && true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n      type: \"text\",\n      placeholder: \"Rut de la empresa\",\n      name: \"rut_empresa\",\n      value: formik.values.rut_empresa,\n      onChange: formik.handleChange,\n      error: formik.errors.rut_empresa && true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      className: \"btn-submit\",\n      children: \"Confirmar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"submit-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ConsultaUno, \"ui7cwNdkn91Y/tlX/y1Wnan5+bg=\", false, function () {\n  return [useFormik];\n});\n\n_c = ConsultaUno;\n\nfunction initialValues() {\n  return {\n    id_empresa: \"\",\n    nombre_empresa: \"\",\n    rut_empresa: \"\"\n  };\n}\n\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConsultaUno\");","map":{"version":3,"sources":["/home/diego/Escritorio/ProyectoBD/front/src/componentes/consultas/ConsultaUno.js"],"names":["React","useState","useFormik","Yup","Form","Button","consultaUno","toast","ConsultaUno","error","setError","formik","initialValues","validationSchema","object","id","string","required","onSubmit","console","log","result","empresaData","message","success","handleSubmit","values","id_empresa","handleChange","errors","nombre_empresa","rut_empresa"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,iBAA7B;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AACpC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMU,MAAM,GAAGT,SAAS,CAAC;AACvBU,IAAAA,aAAa,EAAEA,aAAa,EADL;AAEvBC,IAAAA,gBAAgB,EAAEV,GAAG,CAACW,MAAJ,CAAW;AAC3BC,MAAAA,EAAE,EAAEZ,GAAG,CAACa,MAAJ,GAAaC,QAAb,CAAsB,sBAAtB;AADuB,KAAX,CAFK;AAKvBC,IAAAA,QAAQ,EAAE,MAAOH,EAAP,IAAc;AACtBI,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBL,EAAnB;AACAL,MAAAA,QAAQ,CAAC,EAAD,CAAR;AAEA,YAAMW,MAAM,GAAG,MAAMf,WAAW,CAACgB,WAAD,CAAhC;;AAEA,UAAID,MAAM,CAACE,OAAX,EAAoB;AAClBhB,QAAAA,KAAK,CAACiB,OAAN,CAAc,OAAd;AACAL,QAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AACD,OAHD,MAGO;AACLX,QAAAA,QAAQ,CAACD,KAAK,CAACc,OAAP,CAAR;AACAhB,QAAAA,KAAK,CAACE,KAAN,CAAYA,KAAK,CAACc,OAAlB;AACD;AACF;AAlBsB,GAAD,CAAxB;AAoBA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,YAAhB;AAA6B,IAAA,QAAQ,EAAEZ,MAAM,CAACc,YAA9C;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,WAAW,EAAC,kBAFd;AAGE,MAAA,IAAI,EAAC,YAHP;AAIE,MAAA,KAAK,EAAEd,MAAM,CAACe,MAAP,CAAcC,UAJvB;AAKE,MAAA,QAAQ,EAAEhB,MAAM,CAACiB,YALnB;AAME,MAAA,KAAK,EAAEjB,MAAM,CAACkB,MAAP,CAAcF,UAAd,IAA4B;AANrC;AAAA;AAAA;AAAA;AAAA,YAFF,eAUE,QAAC,IAAD,CAAM,OAAN;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,sBAFd;AAGE,MAAA,IAAI,EAAC,gBAHP;AAIE,MAAA,KAAK,EAAEhB,MAAM,CAACe,MAAP,CAAcI,cAJvB;AAKE,MAAA,QAAQ,EAAEnB,MAAM,CAACiB,YALnB;AAME,MAAA,KAAK,EAAEjB,MAAM,CAACkB,MAAP,CAAcC,cAAd,IAAgC;AANzC;AAAA;AAAA;AAAA;AAAA,YAVF,eAkBE,QAAC,IAAD,CAAM,OAAN;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,mBAFd;AAGE,MAAA,IAAI,EAAC,aAHP;AAIE,MAAA,KAAK,EAAEnB,MAAM,CAACe,MAAP,CAAcK,WAJvB;AAKE,MAAA,QAAQ,EAAEpB,MAAM,CAACiB,YALnB;AAME,MAAA,KAAK,EAAEjB,MAAM,CAACkB,MAAP,CAAcE,WAAd,IAA6B;AANtC;AAAA;AAAA;AAAA;AAAA,YAlBF,eA0BE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA1BF,EA6BGtB,KAAK,iBAAI;AAAG,MAAA,SAAS,EAAC,cAAb;AAAA,gBAA6BA;AAA7B;AAAA;AAAA;AAAA;AAAA,YA7BZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD;;GAzDuBD,W;UAIPN,S;;;KAJOM,W;;AA2DxB,SAASI,aAAT,GAAyB;AACvB,SAAO;AACLe,IAAAA,UAAU,EAAE,EADP;AAELG,IAAAA,cAAc,EAAE,EAFX;AAGLC,IAAAA,WAAW,EAAE;AAHR,GAAP;AAKD;;AACD","sourcesContent":["import React, { useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { consultaUno } from \"../../api/empresa\";\nimport { toast } from \"react-toastify\";\n\nexport default function ConsultaUno() {\n  //variable  de estado para el manejo de error de servidor\n  const [error, setError] = useState(\"\");\n\n  const formik = useFormik({\n    initialValues: initialValues(),\n    validationSchema: Yup.object({\n      id: Yup.string().required(\"El ID es obligatorio\"),\n    }),\n    onSubmit: async (id) => {\n      console.log(\"id:\", id);\n      setError(\"\");\n\n      const result = await consultaUno(empresaData);\n\n      if (result.message) {\n        toast.success(\"aaaaa\");\n        console.log(result);\n      } else {\n        setError(error.message);\n        toast.error(error.message);\n      }\n    },\n  });\n  return (\n    <Form className=\"login-form\" onSubmit={formik.handleSubmit}>\n      <h2>Ingresa una nueva empresa.</h2>\n      <Form.Control\n        type=\"number\"\n        placeholder=\"Id de la empresa\"\n        name=\"id_empresa\"\n        value={formik.values.id_empresa}\n        onChange={formik.handleChange}\n        error={formik.errors.id_empresa && true}\n      />\n      <Form.Control\n        type=\"text\"\n        placeholder=\"Nombre de la empresa\"\n        name=\"nombre_empresa\"\n        value={formik.values.nombre_empresa}\n        onChange={formik.handleChange}\n        error={formik.errors.nombre_empresa && true}\n      />\n      <Form.Control\n        type=\"text\"\n        placeholder=\"Rut de la empresa\"\n        name=\"rut_empresa\"\n        value={formik.values.rut_empresa}\n        onChange={formik.handleChange}\n        error={formik.errors.rut_empresa && true}\n      />\n      <Button type=\"submit\" className=\"btn-submit\">\n        Confirmar\n      </Button>\n      {error && <p className=\"submit-error\">{error}</p>}\n    </Form>\n  );\n}\n\nfunction initialValues() {\n  return {\n    id_empresa: \"\",\n    nombre_empresa: \"\",\n    rut_empresa: \"\",\n  };\n}\n;"]},"metadata":{},"sourceType":"module"}