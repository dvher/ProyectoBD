{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/diego/Escritorio/ProyectoBD/front/src/componentes/personas/Persona.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport { getPersona } from \"../../api/empresa\";\nexport default function Persona() {\n  _s();\n\n  //seteamos el estado inicial de los libros retornados\n  const [persona, setPersona] = useState([]); //seteo de recarga de libros\n\n  const [reloadPersona, setReloadPersona] = useState(false); // efecto que retorna los datos de la api de libros\n\n  useEffect(() => {\n    getPersona().then(response => {\n      setPersona(response);\n    });\n    setReloadPersona(false);\n  }, [reloadPersona]);\n  console.log(persona);\n  const columns = [{\n    dataField: \"id_persona\",\n    text: \"Persona ID\",\n    sort: true\n  }, {\n    dataField: \"nombre\",\n    text: \"Nombre\"\n  }, {\n    dataField: \"apellido\",\n    text: \"Apellido\"\n  }, {\n    dataField: \"rut\",\n    text: \"Rut\"\n  }, {\n    dataField: \"tiene_deuda\",\n    text: \"Tiene deuda\"\n  }, {\n    dataField: \"deuda\",\n    text: \"deuda\"\n  }, {\n    dataField: \"sexo\",\n    text: \"sexo\"\n  }, {\n    dataField: \"arrendatario\",\n    text: \"arrendatario\"\n  }];\n  return /*#__PURE__*/_jsxDEV(BootstrapTable, {\n    bootstrap4: true,\n    keyField: \"id_persona\",\n    data: persona,\n    columns: columns,\n    pagination: paginationFactory({\n      sizePerPage: 5\n    }),\n    striped: true,\n    hover: true,\n    condensed: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Persona, \"4rW07ntgSHbmOjWqoYHSYYCPbtE=\");\n\n_c = Persona;\n\nvar _c;\n\n$RefreshReg$(_c, \"Persona\");","map":{"version":3,"sources":["/home/diego/Escritorio/ProyectoBD/front/src/componentes/personas/Persona.js"],"names":["React","useState","useEffect","BootstrapTable","paginationFactory","getPersona","Persona","persona","setPersona","reloadPersona","setReloadPersona","then","response","console","log","columns","dataField","text","sort","sizePerPage"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,SAASC,UAAT,QAA2B,mBAA3B;AAEA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAChC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC,CAFgC,CAGhC;;AACA,QAAM,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,KAAD,CAAlD,CAJgC,CAMhC;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,UAAU,GAAGM,IAAb,CAAmBC,QAAD,IAAc;AAC9BJ,MAAAA,UAAU,CAACI,QAAD,CAAV;AACD,KAFD;AAGAF,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD,GALQ,EAKN,CAACD,aAAD,CALM,CAAT;AAOAI,EAAAA,OAAO,CAACC,GAAR,CAAYP,OAAZ;AAEA,QAAMQ,OAAO,GAAG,CACd;AACEC,IAAAA,SAAS,EAAE,YADb;AAEEC,IAAAA,IAAI,EAAE,YAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GADc,EAMd;AACEF,IAAAA,SAAS,EAAE,QADb;AAEEC,IAAAA,IAAI,EAAE;AAFR,GANc,EAUd;AACED,IAAAA,SAAS,EAAE,UADb;AAEEC,IAAAA,IAAI,EAAE;AAFR,GAVc,EAcd;AACED,IAAAA,SAAS,EAAE,KADb;AAEEC,IAAAA,IAAI,EAAE;AAFR,GAdc,EAkBd;AACED,IAAAA,SAAS,EAAE,aADb;AAEEC,IAAAA,IAAI,EAAE;AAFR,GAlBc,EAsBd;AACED,IAAAA,SAAS,EAAE,OADb;AAEEC,IAAAA,IAAI,EAAE;AAFR,GAtBc,EA0Bd;AACED,IAAAA,SAAS,EAAE,MADb;AAEEC,IAAAA,IAAI,EAAE;AAFR,GA1Bc,EA8Bd;AACED,IAAAA,SAAS,EAAE,cADb;AAEEC,IAAAA,IAAI,EAAE;AAFR,GA9Bc,CAAhB;AAoCA,sBACE,QAAC,cAAD;AACE,IAAA,UAAU,MADZ;AAEE,IAAA,QAAQ,EAAC,YAFX;AAGE,IAAA,IAAI,EAAEV,OAHR;AAIE,IAAA,OAAO,EAAEQ,OAJX;AAKE,IAAA,UAAU,EAAEX,iBAAiB,CAAC;AAAEe,MAAAA,WAAW,EAAE;AAAf,KAAD,CAL/B;AAME,IAAA,OAAO,MANT;AAOE,IAAA,KAAK,MAPP;AAQE,IAAA,SAAS;AARX;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAhEuBb,O;;KAAAA,O","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport { getPersona } from \"../../api/empresa\";\n\nexport default function Persona() {\n  //seteamos el estado inicial de los libros retornados\n  const [persona, setPersona] = useState([]);\n  //seteo de recarga de libros\n  const [reloadPersona, setReloadPersona] = useState(false);\n\n  // efecto que retorna los datos de la api de libros\n  useEffect(() => {\n    getPersona().then((response) => {\n      setPersona(response);\n    });\n    setReloadPersona(false);\n  }, [reloadPersona]);\n\n  console.log(persona);\n\n  const columns = [\n    {\n      dataField: \"id_persona\",\n      text: \"Persona ID\",\n      sort: true,\n    },\n    {\n      dataField: \"nombre\",\n      text: \"Nombre\",\n    },\n    {\n      dataField: \"apellido\",\n      text: \"Apellido\",\n    },\n    {\n      dataField: \"rut\",\n      text: \"Rut\",\n    },\n    {\n      dataField: \"tiene_deuda\",\n      text: \"Tiene deuda\",\n    },\n    {\n      dataField: \"deuda\",\n      text: \"deuda\",\n    },\n    {\n      dataField: \"sexo\",\n      text: \"sexo\",\n    },\n    {\n      dataField: \"arrendatario\",\n      text: \"arrendatario\",\n    },\n  ];\n\n  return (\n    <BootstrapTable\n      bootstrap4\n      keyField=\"id_persona\"\n      data={persona}\n      columns={columns}\n      pagination={paginationFactory({ sizePerPage: 5 })}\n      striped\n      hover\n      condensed\n    />\n  );\n}"]},"metadata":{},"sourceType":"module"}