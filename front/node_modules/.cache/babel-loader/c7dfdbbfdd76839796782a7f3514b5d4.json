{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/diego/Escritorio/ProyectoBD/front/src/Layout/Layout1.js\";\nimport React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Container, Row } from \"react-bootstrap\";\nimport NavBar from \"../components/NavBar\";\n\nfunction Layout(props) {\n  const {\n    routes\n  } = props;\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoadRoutes, {\n      routes: routes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Layout;\n\nfunction LoadRoutes({\n  routes\n}) {\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: routes.map((route, index) => /*#__PURE__*/_jsxDEV(Route, {\n      path: route.path,\n      exact: route.exact,\n      component: route.component\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = LoadRoutes;\nexport default Layout;\n/* componente layout: \neste componente renderiza todo el sistema de rutas que creamos anteriormente, este sistema se envia a\ntraves de propiedades (props), se obitiene el sistema de rutas y luego con la funciones loadRoutes se realiza la carga\nLoadRoutes:  funcion que crea la ruta con el componente, path, y si la ruta es exacta (se recorre todo el array routes para obtener los datos)\n*/\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Layout\");\n$RefreshReg$(_c2, \"LoadRoutes\");","map":{"version":3,"sources":["/home/diego/Escritorio/ProyectoBD/front/src/Layout/Layout1.js"],"names":["React","Route","Switch","Container","Row","NavBar","Layout","props","routes","console","log","LoadRoutes","map","route","index","path","exact","component"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,SAASC,SAAT,EAAoBC,GAApB,QAA+B,iBAA/B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAAaD,KAAnB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AAEA,sBACE,QAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAA,4BACE,QAAC,GAAD;AAAA,6BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,UAAD;AAAY,MAAA,MAAM,EAAEC;AAApB;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;KAbQF,M;;AAeT,SAASK,UAAT,CAAoB;AAAEH,EAAAA;AAAF,CAApB,EAAgC;AAC9B,sBACE,QAAC,MAAD;AAAA,cACGA,MAAM,CAACI,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,kBACV,QAAC,KAAD;AAEE,MAAA,IAAI,EAAED,KAAK,CAACE,IAFd;AAGE,MAAA,KAAK,EAAEF,KAAK,CAACG,KAHf;AAIE,MAAA,SAAS,EAAEH,KAAK,CAACI;AAJnB,OACOH,KADP;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;MAbQH,U;AAcT,eAAeL,MAAf;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Container, Row } from \"react-bootstrap\";\nimport NavBar from \"../components/NavBar\";\n\nfunction Layout(props) {\n  const { routes } = props;\n  console.log(props);\n\n  return (\n    <Container fluid>\n      <Row>\n        <NavBar />\n      </Row>\n      <br />\n      <LoadRoutes routes={routes} />\n    </Container>\n  );\n}\n\nfunction LoadRoutes({ routes }) {\n  return (\n    <Switch>\n      {routes.map((route, index) => (\n        <Route\n          key={index}\n          path={route.path}\n          exact={route.exact}\n          component={route.component}\n        />\n      ))}\n    </Switch>\n  );\n}\nexport default Layout;\n\n/* componente layout: \neste componente renderiza todo el sistema de rutas que creamos anteriormente, este sistema se envia a\ntraves de propiedades (props), se obitiene el sistema de rutas y luego con la funciones loadRoutes se realiza la carga\nLoadRoutes:  funcion que crea la ruta con el componente, path, y si la ruta es exacta (se recorre todo el array routes para obtener los datos)\n*/"]},"metadata":{},"sourceType":"module"}