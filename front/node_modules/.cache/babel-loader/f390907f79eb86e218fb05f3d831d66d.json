{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/diego/Escritorio/ProyectoBD/front/src/componentes/personas/AddPersona.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { createPersona } from \"../../api/empresa\";\nimport { toast } from \"react-toastify\";\nexport default function AddPersona() {\n  _s();\n\n  //variable  de estado para el manejo de error de servidor\n  const [error, setError] = useState(\"\");\n  const formik = useFormik({\n    initialValues: initialValues(),\n    validationSchema: Yup.object({\n      nombre: Yup.string().required(\"El nombre es obligatorio.\"),\n      id_persona: Yup.string().required(\"El ID es obligatorio.\"),\n      rut: Yup.string().required(\"El RUT es obligatorio.\"),\n      apellido: Yup.string().required(\"El apellido es obligatorio.\"),\n      //tiene_deuda: Yup.string().required(\"Es obligatorio declarar la deuda.\"),\n      deuda: Yup.string().required(\"Es necesario poner el valor de la deuda.\"),\n      sexo: Yup.string().required(\"El sexo de la persona es obligatorio.\") //arrentadario: Yup.string().required(\"Es necesario saber si la persona es arrentadario.\"),\n\n    }),\n    onSubmit: async personaData => {\n      console.log(\"persona:\", personaData);\n      setError(\"\");\n      const result = await createPersona(personaData);\n\n      if (result.message) {\n        alert(result.message + \":\\n\" + \"ID: \" + personaData.id_persona + \"\\nNombre: \" + personaData.nombre + \"\\nApellido: \" + personaData.apellido + \"\\nRUT: \" + personaData.rut);\n      } else {\n        setError(error.message);\n        toast.error(error.message);\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"login-form\",\n    onSubmit: formik.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Ingresa una nueva persona.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n      type: \"number\",\n      placeholder: \"Id de la persona\",\n      name: \"id_persona\",\n      value: formik.values.id_persona,\n      onChange: formik.handleChange,\n      error: formik.errors.id_persona && true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n      type: \"text\",\n      placeholder: \"Nombre de la persona\",\n      name: \"nombre\",\n      value: formik.values.nombre,\n      onChange: formik.handleChange,\n      error: formik.errors.nombre && true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n      type: \"text\",\n      placeholder: \"Apellido de la persona\",\n      name: \"apellido\",\n      value: formik.values.apellido,\n      onChange: formik.handleChange,\n      error: formik.errors.apellido && true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n      type: \"text\",\n      placeholder: \"Rut de la persona\",\n      name: \"rut\",\n      value: formik.values.rut,\n      onChange: formik.handleChange,\n      error: formik.errors.rut && true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n      type: \"number\",\n      placeholder: \"\\xBFLa persona tiene deudas?\",\n      name: \"tiene_deuda\",\n      min: \"0\",\n      max: \"1\",\n      value: formik.values.tiene_deuda,\n      onChange: formik.handleChange,\n      error: formik.errors.tiene_deuda && true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n      type: \"number\",\n      placeholder: \"Deuda de la persona\",\n      name: \"deuda\",\n      value: formik.values.deuda,\n      onChange: formik.handleChange,\n      error: formik.errors.deuda && true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n      type: \"text\",\n      placeholder: \"Sexo de la persona\",\n      name: \"sexo\",\n      value: formik.values.sexo,\n      onChange: formik.handleChange,\n      error: formik.errors.sexo && true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n      type: \"number\",\n      placeholder: \"\\xBFLa persona es arrendataria?\",\n      name: \"arrendatario\",\n      min: \"0\",\n      max: \"1\",\n      value: formik.values.arrentadario,\n      onChange: formik.handleChange,\n      error: formik.errors.arrentadario && true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      className: \"btn-submit\",\n      children: \"Confirmar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"submit-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddPersona, \"ui7cwNdkn91Y/tlX/y1Wnan5+bg=\", false, function () {\n  return [useFormik];\n});\n\n_c = AddPersona;\n\nfunction initialValues() {\n  return {\n    id_persona: \"\",\n    nombre: \"\",\n    apellido: \"\",\n    rut: \"\",\n    tiene_deuda: \"\",\n    deuda: \"\",\n    sexo: \"\",\n    arrendatario: \"\"\n  };\n}\n\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPersona\");","map":{"version":3,"sources":["/home/diego/Escritorio/ProyectoBD/front/src/componentes/personas/AddPersona.js"],"names":["React","useState","useFormik","Yup","Form","Button","createPersona","toast","AddPersona","error","setError","formik","initialValues","validationSchema","object","nombre","string","required","id_persona","rut","apellido","deuda","sexo","onSubmit","personaData","console","log","result","message","alert","handleSubmit","values","handleChange","errors","tiene_deuda","arrentadario","arrendatario"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { createPersona } from \"../../api/empresa\";\nimport { toast } from \"react-toastify\";\n\nexport default function AddPersona() {\n  //variable  de estado para el manejo de error de servidor\n  const [error, setError] = useState(\"\");\n\n  const formik = useFormik({\n    initialValues: initialValues(),\n    validationSchema: Yup.object({\n      nombre: Yup.string().required(\"El nombre es obligatorio.\"),\n      id_persona: Yup.string().required(\"El ID es obligatorio.\"),\n      rut: Yup.string().required(\"El RUT es obligatorio.\"),\n      apellido: Yup.string().required(\"El apellido es obligatorio.\"),\n      //tiene_deuda: Yup.string().required(\"Es obligatorio declarar la deuda.\"),\n      deuda: Yup.string().required(\"Es necesario poner el valor de la deuda.\"),\n      sexo: Yup.string().required(\"El sexo de la persona es obligatorio.\"),\n      //arrentadario: Yup.string().required(\"Es necesario saber si la persona es arrentadario.\"),\n    }),\n    onSubmit: async (personaData) => {\n      console.log(\"persona:\", personaData);\n      setError(\"\");\n\n      const result = await createPersona(personaData);\n\n      if (result.message) {\n        alert(result.message + \":\\n\" + \"ID: \" + personaData.id_persona + \"\\nNombre: \" + personaData.nombre + \"\\nApellido: \" + personaData.apellido + \"\\nRUT: \" + personaData.rut);\n      } else {\n        setError(error.message);\n        toast.error(error.message);\n      }\n    },\n  });\n  return (\n    <Form className=\"login-form\" onSubmit={formik.handleSubmit}>\n      <h2>Ingresa una nueva persona.</h2>\n      <Form.Control\n        type=\"number\"\n        placeholder=\"Id de la persona\"\n        name=\"id_persona\"\n        value={formik.values.id_persona}\n        onChange={formik.handleChange}\n        error={formik.errors.id_persona && true}\n      />\n      <Form.Control\n        type=\"text\"\n        placeholder=\"Nombre de la persona\"\n        name=\"nombre\"\n        value={formik.values.nombre}\n        onChange={formik.handleChange}\n        error={formik.errors.nombre && true}\n      />\n      <Form.Control\n        type=\"text\"\n        placeholder=\"Apellido de la persona\"\n        name=\"apellido\"\n        value={formik.values.apellido}\n        onChange={formik.handleChange}\n        error={formik.errors.apellido && true}\n      />\n      <Form.Control\n        type=\"text\"\n        placeholder=\"Rut de la persona\"\n        name=\"rut\"\n        value={formik.values.rut}\n        onChange={formik.handleChange}\n        error={formik.errors.rut && true}\n      />\n      <Form.Control\n        type=\"number\"\n        placeholder=\"¿La persona tiene deudas?\"\n        name=\"tiene_deuda\"\n        min=\"0\"\n        max=\"1\"\n        value={formik.values.tiene_deuda}\n        onChange={formik.handleChange}\n        error={formik.errors.tiene_deuda && true}\n      />\n      <Form.Control\n        type=\"number\"\n        placeholder=\"Deuda de la persona\"\n        name=\"deuda\"\n        value={formik.values.deuda}\n        onChange={formik.handleChange}\n        error={formik.errors.deuda && true}\n      />\n      <Form.Control\n        type=\"text\"\n        placeholder=\"Sexo de la persona\"\n        name=\"sexo\"\n        value={formik.values.sexo}\n        onChange={formik.handleChange}\n        error={formik.errors.sexo && true}\n      />\n      <Form.Control\n        type=\"number\"\n        placeholder=\"¿La persona es arrendataria?\"\n        name=\"arrendatario\"\n        min=\"0\"\n        max=\"1\"\n        value={formik.values.arrentadario}\n        onChange={formik.handleChange}\n        error={formik.errors.arrentadario && true}\n      />      \n      <Button type=\"submit\" className=\"btn-submit\">\n        Confirmar\n      </Button>\n      {error && <p className=\"submit-error\">{error}</p>}\n    </Form>\n  );\n}\n\nfunction initialValues() {\n  return {\n    id_persona: \"\",\n    nombre: \"\",\n    apellido: \"\",\n    rut: \"\",\n    tiene_deuda: \"\",\n    deuda: \"\",\n    sexo: \"\",\n    arrendatario: \"\",\n  };\n}\n;"]},"metadata":{},"sourceType":"module"}