{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/diego/Escritorio/ProyectoBD/front/src/App.js\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n/* BrowserRouter as Router es la función que nos permitirá crear nuestro sistema de rutas\n Route : componente que utilizaremos para crear la ruta especifica, en nuestro caso le enviaremos\n el arreglo routes\n  Switch : componente que permite refrescar el navegador cuando cambiamos de ruta*/\n\nimport routes from \"./config/routes\";\n\nfunction App() {\n  console.log(routes); //aca puedo escribir js puro\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: routes.map((route, index) => /*#__PURE__*/_jsxDEV(RouteWithSubRoutes, { ...route\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\n\nfunction RouteWithSubRoutes(route) {\n  console.log(route);\n  return /*#__PURE__*/_jsxDEV(Route, {\n    path: route.path,\n    exact: route.exact,\n    render: props => /*#__PURE__*/_jsxDEV(route.component, {\n      routes: route.routes,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 26\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = RouteWithSubRoutes;\nexport default App; //componente principal de nuestra aplicación , como veran es una función\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"RouteWithSubRoutes\");","map":{"version":3,"sources":["/home/diego/Escritorio/ProyectoBD/front/src/App.js"],"names":["React","BrowserRouter","Router","Route","Switch","routes","App","console","log","map","route","index","RouteWithSubRoutes","path","exact","props"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA;AACA;AACA;AACA;;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;AAEA,SAASC,GAAT,GAAe;AACbC,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ,EADa,CACQ;;AACrB,sBACE,QAAC,MAAD;AAAA,2BACE,QAAC,MAAD;AAAA,gBACGA,MAAM,CAACI,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,kBACV,QAAC,kBAAD,OAAoCD;AAApC,SAAyBC,KAAzB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;KAXQL,G;;AAYT,SAASM,kBAAT,CAA4BF,KAA5B,EAAmC;AACjCH,EAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACA,sBACE,QAAC,KAAD;AACE,IAAA,IAAI,EAAEA,KAAK,CAACG,IADd;AAEE,IAAA,KAAK,EAAEH,KAAK,CAACI,KAFf;AAGE,IAAA,MAAM,EAAGC,KAAD,iBAAW,QAAC,KAAD,CAAO,SAAP;AAAiB,MAAA,MAAM,EAAEL,KAAK,CAACL,MAA/B;AAAA,SAA2CU;AAA3C;AAAA;AAAA;AAAA;AAAA;AAHrB;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;MATQH,kB;AAUT,eAAeN,GAAf,C,CACA","sourcesContent":["import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n/* BrowserRouter as Router es la función que nos permitirá crear nuestro sistema de rutas\n Route : componente que utilizaremos para crear la ruta especifica, en nuestro caso le enviaremos\n el arreglo routes\n  Switch : componente que permite refrescar el navegador cuando cambiamos de ruta*/\nimport routes from \"./config/routes\";\n\nfunction App() {\n  console.log(routes); //aca puedo escribir js puro\n  return (\n    <Router>\n      <Switch>\n        {routes.map((route, index) => (\n          <RouteWithSubRoutes key={index} {...route} />\n        ))}\n      </Switch>\n    </Router>\n  );\n}\nfunction RouteWithSubRoutes(route) {\n  console.log(route);\n  return (\n    <Route\n      path={route.path}\n      exact={route.exact}\n      render={(props) => <route.component routes={route.routes} {...props} />}\n    />\n  );\n}\nexport default App;\n//componente principal de nuestra aplicación , como veran es una función"]},"metadata":{},"sourceType":"module"}