{"ast":null,"code":"import { basePath } from './config';\nexport function createEmpresa(empresa) {\n  const url = `${basePath}/empresa`;\n  const params = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(empresa)\n  };\n  return fetch(url, params).then(response => {\n    return response.json();\n  }).then(result => {\n    return result;\n  });\n}\nexport function getEmpresa() {\n  const url = `${basePath}/empresa`;\n  const params = {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  return fetch(url, params).then(response => {\n    return response.json();\n  }).then(result => {\n    return result;\n  });\n}\nexport function getEmpresaById(id) {\n  const url = `${basePath}/empresa/${id}`;\n  const params = {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  return fetch(url, params).then(response => {\n    return response.json();\n  }).then(result => {\n    return result;\n  });\n}\nexport function createPersona(persona) {\n  const url = `${basePath}/persona`;\n  const params = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(persona)\n  };\n  return fetch(url, params).then(response => {\n    return response.json();\n  }).then(result => {\n    return result;\n  });\n}\nexport function getPersona() {\n  const url = `${basePath}/persona`;\n  const params = {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  return fetch(url, params).then(response => {\n    return response.json();\n  }).then(result => {\n    return result;\n  });\n}\nexport function getPersonaById(id) {\n  const url = `${basePath}/persona/${id}`;\n  const params = {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  return fetch(url, params).then(response => {\n    return response.json();\n  }).then(result => {\n    return result;\n  });\n}","map":{"version":3,"sources":["/home/diego/Escritorio/ProyectoBD/front/src/api/empresa.js"],"names":["basePath","createEmpresa","empresa","url","params","method","headers","body","JSON","stringify","fetch","then","response","json","result","getEmpresa","getEmpresaById","id","createPersona","persona","getPersona","getPersonaById"],"mappings":"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","sourcesContent":["import {basePath} from './config';\n\nexport function createEmpresa(empresa){\n\n    const url = `${basePath}/empresa`;\n\n    const params = {\n\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(empresa),\n    };\n\n    return fetch(url, params).then((response) => {\n\n        return response.json();\n\n    }).then((result) => {\n\n        return result;\n\n    });\n\n}\n\nexport function getEmpresa(){\n\n    const url = `${basePath}/empresa`;\n\n    const params = {\n\n        method: 'GET',\n        headers: {\n\n            'Content-Type': 'application/json',\n\n        },\n\n    };\n\n    return fetch(url, params).then((response) => {\n\n        return response.json();\n\n    }).then((result) => {\n\n        return result;\n\n    });\n\n}\n\nexport function getEmpresaById(id){\n\n    const url = `${basePath}/empresa/${id}`;\n\n    const params = {\n\n        method: 'GET',\n        headers: {\n\n            'Content-Type': 'application/json',\n\n        },\n\n    };\n\n    return fetch(url, params).then((response) => {\n\n        return response.json();\n\n    }).then((result) => {\n\n        return result;\n\n    });\n\n}\n\nexport function createPersona(persona){\n\n    const url = `${basePath}/persona`;\n\n    const params = {\n\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(persona),\n    };\n\n    return fetch(url, params).then((response) => {\n\n        return response.json();\n\n    }).then((result) => {\n\n        return result;\n\n    });\n\n}\n\nexport function getPersona(){\n\n    const url = `${basePath}/persona`;\n\n    const params = {\n\n        method: 'GET',\n        headers: {\n\n            'Content-Type': 'application/json',\n\n        },\n\n    };\n\n    return fetch(url, params).then((response) => {\n\n        return response.json();\n\n    }).then((result) => {\n\n        return result;\n\n    });\n\n}\n\nexport function getPersonaById(id){\n\n    const url = `${basePath}/persona/${id}`;\n\n    const params = {\n\n        method: 'GET',\n        headers: {\n\n            'Content-Type': 'application/json',\n\n        },\n\n    };\n\n    return fetch(url, params).then((response) => {\n\n        return response.json();\n\n    }).then((result) => {\n\n        return result;\n\n    });\n\n}"]},"metadata":{},"sourceType":"module"}